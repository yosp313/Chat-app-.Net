<div class="container">
    <div class="row p-1">
        <div class="col-1">Room ID</div>
        <div class="col-5"><input type="text" class="w-100" id="roomInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-1">User</div>
        <div class="col-5"><input type="text" id="userInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-1">Message</div>
        <div class="col-5"><input type="text" class="w-100" id="messageInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-6 text-end">
            <input type="button" id="sendButton" value="Send Message" />
        </div>
        <div class="col-6 text-end">
            <input type="button" id="joinButton" value="Join Group" />
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <hr />
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@5.0.9/dist/browser/signalr.min.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/Room").build();

    //Disable the send button until connection is established.
    document.getElementById("sendButton").disabled = true;
    document.getElementById("joinButton").disabled = true;

    connection.on("ReceiveMessage", function (user, message) {
        let li = document.createElement("li");
        document.getElementById("messagesList").appendChild(li);
        // We can assign user-supplied strings to an element's textContent because it
        // is not interpreted as markup. If you're assigning in any other way, you
        // should be aware of possible script injection concerns.
        li.textContent = `${user} :  ${message}`;
    });

    connection
        .start()
        .then(function () {
            document.getElementById("sendButton").disabled = false;
            document.getElementById("joinButton").disabled = false;
        })
        .catch(function (err) {
            return console.error(err.toString());
        });

    document
        .getElementById("sendButton")
        .addEventListener("click", function (event) {
            let user = document.getElementById("userInput").value;
            let message = document.getElementById("messageInput").value;
            let roomId = document.getElementById("roomInput").value;
            connection
                .invoke("SendMessage", roomId, user, message)
                .catch(function (err) {
                    return console.error(err.toString());
                });
            event.preventDefault();
        });

    document
        .getElementById("joinButton")
        .addEventListener("click", function (event) {
            let user = document.getElementById("userInput").value;
            let roomId = document.getElementById("roomInput").value;
            connection
                .invoke("JoinGroup", roomId, user)
                .then(() => console.log(`${user} has joined`))
                .catch(function (err) {
                    return console.error(err.toString());
                });
            event.preventDefault();
        });

</script>